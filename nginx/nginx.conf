log_format sample '$http_x_forwarded_for($remote_addr) - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

server {
  listen      80;
  server_name _;
  access_log  /dev/stdout sample;
  error_log   /dev/stderr error;

  set $invalid_access 1;

  # Google Healthチェックを許可
  if ($http_user_agent ~* GoogleHC/.*) {
    set $invalid_access 0;
  }

  # IP制御(正規表現)
  #
  # X-Forwarded-For = 118.238.209.228, 35.190.4.56
  # 単純に `.*118\.238\.209\.228.*` のように設定すると、ヘッダ情報に
  # 手動で踏み台となるIPアドレスを設定しただけでチェックが抜けられて
  # しまう。
  #   例) curl http://xxxx -H "X-Forwarded-For:hogehoge"
  #       とかやると、nginxで取得できるX-Forwarded-Forヘッダは
  #           hogehoge, 118.238.209.228, 35.190.4.56
  #       となる
  # カンマ区切りのリストの最後が、LBのIPアドレスとなるようで、
  # IPアドレスは順番に付与されるようなので、この前のIPアドレスのチェックをする必要がある。
  #   サンプル正規表現
  #       (35\.19[0,1]\.[0-9]?[0-9]?[0-9]\.[0-9]?[0-9]?[0-9]|130\.211\.[0-3]\.[0-9]?[0-9]?[0-9])
  #       # rubyで確認
  if ($http_x_forwarded_for ~* ^.*118\.238\.209\.228,\s35\.19[0,1]\.[0-9]?[0-9]?[0-9]\.[0-9]?[0-9]?[0-9]$) {
    set $invalid_access 0;
  }

  # $invalid_accessフラグが立っている場合は403を返す
  if ($invalid_access) {
    return 403;
  }

  location / {
    proxy_pass "http://localhost:8080";
  }
}
